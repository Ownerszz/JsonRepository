plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}
def secretsFile = rootProject.file("secrets.properties");
def secrets = new Properties()
secrets.load(new FileInputStream(secretsFile))
group 'ownerszz.libraries'
version '1.0'
java {
    withSourcesJar()
    withJavadocJar()
}
repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/ownerszz/JsonRepository")
        credentials {
            username = secrets['username']
            password = secrets['key']
        }
    }
}

dependencies {
    implementation 'ownerszz.libraries:dependency-injection:2.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}
task fatJar(type: Jar) {
    manifest.from jar.manifest
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
    with javadocJar
}

task release(type: Copy){
    dependsOn tasks.findByName("fatJar")
    from file("${buildDir}/libs/json-repository-${version}.jar")
    into "${projectDir}/release"
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/ownerszz/JsonRepository")
            credentials {
                username = secrets['username']
                password = secrets['key']
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
